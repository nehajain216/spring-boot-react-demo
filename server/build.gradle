plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'jacoco'
    id 'checkstyle'
}

group 'com.nj'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

bootRun {
    args = ["--spring.profiles.default=local"]
}

tasks.withType(Test) {
    testLogging {
        events "standardOut", "started", "passed", "skipped", "failed"
    }
}
test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    finalizedBy(["jacocoTestReport","jacocoTestCoverageVerification"])
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir:it)}))
    }
    dependsOn test
}

jacocoTestCoverageVerification{
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir:it)}))
    }
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0
            }
        }
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0
            }
        }
        rule {

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.vladmihalcea:hibernate-types-52:2.11.1'

    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.projectlombok:lombok'
    implementation 'com.auth0:java-jwt:3.4.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "junit", module: "junit"
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.testcontainers:postgresql:1.15.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.15.3'

}
configurations {
    all {
        exclude group:'org.springframework.boot', module:'spring-boot-starter-logging'
    }
}

checkstyle {
    toolVersion = '6.4.1'
    sourceSets = [sourceSets.main]
    configFile = rootProject.file("config/checkstyle/checkstyle.xml")
    showViolations = true
    ignoreFailures = true
}

tasks.withType(Checkstyle) {
    reports {
        html.destination rootProject.file("build/reports/checkstyle/checkstyle.html")
    }
}

checkstyleMain{
    source='src/main/java'
}
checkstyleTest {
    source='src/test/java'
}
